{"ast":null,"code":"var _jsxFileName = \"/Users/fabiankjellberg/Documents/GitHub/test/src/components/Carousel/Carousel.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nimport './Carousel.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Carousel(props) {\n  _s();\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const carouselRef = useRef(null);\n  const updateHeight = () => {\n    const imgElement = carouselRef.current.querySelector(`img[data-index=\"${currentIndex}\"]`);\n    if (imgElement && imgElement.complete) {\n      // Using the natural dimensions of the image to calculate aspect ratio\n      const aspectRatio = imgElement.naturalWidth / imgElement.naturalHeight;\n      const newHeight = carouselRef.current.offsetWidth / aspectRatio;\n      carouselRef.current.style.height = `${newHeight}px`;\n    }\n  };\n  useEffect(() => {\n    window.addEventListener('resize', updateHeight);\n    updateHeight(); // Initial update    \n\n    const intervalId = setInterval(() => {\n      goToNext();\n    }, 4500);\n    return () => {\n      clearInterval(intervalId);\n      window.removeEventListener('resize', updateHeight);\n    };\n  }, [currentIndex]);\n  useEffect(() => {\n    // This ensures the height is updated when the images change, for example on component mount\n    updateHeight();\n  }, [props.imageSrc]);\n  const goToPrevious = () => {\n    setCurrentIndex(prevIndex => prevIndex === 0 ? props.imageSrc.length - 1 : prevIndex - 1);\n  };\n  const goToNext = () => {\n    setCurrentIndex(prevIndex => prevIndex === props.imageSrc.length - 1 ? 0 : prevIndex + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"whole-ass-car\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"carousel\",\n        ref: carouselRef,\n        children: props.imageSrc.map((src, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n          \"data-index\": index,\n          src: src,\n          alt: `Slide ${index}`,\n          onLoad: updateHeight // Re-calculate height when each image loads\n          ,\n          style: {\n            transform: `translateX(${100 * (index - currentIndex)}%)`\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"carousel-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"previous\",\n          onClick: goToPrevious,\n          children: \"<\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"next\",\n          onClick: goToNext,\n          children: \">\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(Carousel, \"sbqlQxZ2SRhxzHR7we1jzhTd6uM=\");\n_c = Carousel;\nexport default Carousel;\nvar _c;\n$RefreshReg$(_c, \"Carousel\");","map":{"version":3,"names":["useState","useEffect","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","Carousel","props","_s","currentIndex","setCurrentIndex","carouselRef","updateHeight","imgElement","current","querySelector","complete","aspectRatio","naturalWidth","naturalHeight","newHeight","offsetWidth","style","height","window","addEventListener","intervalId","setInterval","goToNext","clearInterval","removeEventListener","imageSrc","goToPrevious","prevIndex","length","children","className","ref","map","src","index","alt","onLoad","transform","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/fabiankjellberg/Documents/GitHub/test/src/components/Carousel/Carousel.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\nimport './Carousel.css';\n\nfunction Carousel(props) {\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const carouselRef = useRef(null);\n  \n  const updateHeight = () => {\n    const imgElement = carouselRef.current.querySelector(`img[data-index=\"${currentIndex}\"]`);\n    if (imgElement && imgElement.complete) {\n      // Using the natural dimensions of the image to calculate aspect ratio\n      const aspectRatio = imgElement.naturalWidth / imgElement.naturalHeight;\n      const newHeight = carouselRef.current.offsetWidth / aspectRatio;\n      carouselRef.current.style.height = `${newHeight}px`;\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('resize', updateHeight);\n    updateHeight(); // Initial update    \n\n    const intervalId = setInterval(() => {\n        goToNext();\n    }, 4500);\n\n    return () => {\n        clearInterval(intervalId);\n        window.removeEventListener('resize', updateHeight);\n    };\n\n  }, [currentIndex]);\n\n  useEffect(() => {\n    // This ensures the height is updated when the images change, for example on component mount\n    updateHeight();\n  }, [props.imageSrc]);\n\n  const goToPrevious = () => {\n    setCurrentIndex((prevIndex) => \n      prevIndex === 0 ? props.imageSrc.length - 1 : prevIndex - 1);\n  };\n\n  const goToNext = () => {\n    setCurrentIndex((prevIndex) => \n      prevIndex === props.imageSrc.length - 1 ? 0 : prevIndex + 1);\n  };\n\n  return (\n    <>\n        <div className='whole-ass-car'>\n        <div className=\"carousel\" ref={carouselRef}>\n        \n            {props.imageSrc.map((src, index) => (\n                <img\n                key={index}\n                data-index={index}\n                src={src}\n                alt={`Slide ${index}`}\n                onLoad={updateHeight} // Re-calculate height when each image loads\n                style={{ transform: `translateX(${100 * (index - currentIndex)}%)` }}\n                />\n            ))}\n        </div>\n        <div className='carousel-buttons'>\n            <button className=\"previous\" onClick={goToPrevious}>&lt;</button>\n            <button className=\"next\" onClick={goToNext}>&gt;</button>\n        </div>\n        </div>\n    </>\n  );\n}\n\nexport default Carousel;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}