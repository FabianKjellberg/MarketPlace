{"ast":null,"code":"var _jsxFileName = \"/Users/fabiankjellberg/Documents/GitHub/test/src/components/Carousel/Carousel.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nimport './Carousel.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Carousel(props) {\n  _s();\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const carouselRef = useRef(null); // Reference to the carousel container\n\n  // Dynamically adjust height based on the current image\n  const adjustCarouselHeight = () => {\n    const imgElement = carouselRef.current.querySelector(`img[data-index=\"${currentIndex}\"]`);\n    if (imgElement) {\n      const height = imgElement.naturalHeight; // Get the natural height of the image\n      carouselRef.current.style.height = `${height}px`; // Adjust the carousel's height\n    }\n  };\n\n  // Adjust the carousel height once the component mounts\n  // and whenever the currentIndex changes\n  useEffect(() => {\n    adjustCarouselHeight();\n    // Optionally, add a window resize listener to adjust height on window resize\n    window.addEventListener('resize', adjustCarouselHeight);\n    return () => window.removeEventListener('resize', adjustCarouselHeight);\n  }, [currentIndex]);\n  const goToPrevious = () => {\n    setCurrentIndex(prevIndex => prevIndex === 0 ? props.imageSrc.length - 1 : prevIndex - 1);\n  };\n  const goToNext = () => {\n    setCurrentIndex(prevIndex => prevIndex === props.imageSrc.length - 1 ? 0 : prevIndex + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"carousel\",\n      ref: carouselRef,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"previous\",\n        onClick: goToPrevious,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), props.imageSrc.map((src, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        \"data-index\": index // Add a data-index attribute\n        ,\n        src: src,\n        alt: `Slide ${index}`,\n        style: {\n          transform: `translateX(${100 * (index - currentIndex)}%)`,\n          position: 'absolute' // Ensure this is absolutely positioned\n        },\n        onLoad: adjustCarouselHeight // Adjust height when an image loads\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"next\",\n        onClick: goToNext,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(Carousel, \"PXs+B+leS6gYvYDvmgo/yckto1I=\");\n_c = Carousel;\nexport default Carousel;\nvar _c;\n$RefreshReg$(_c, \"Carousel\");","map":{"version":3,"names":["useState","useEffect","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","Carousel","props","_s","currentIndex","setCurrentIndex","carouselRef","adjustCarouselHeight","imgElement","current","querySelector","height","naturalHeight","style","window","addEventListener","removeEventListener","goToPrevious","prevIndex","imageSrc","length","goToNext","children","className","ref","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","src","index","alt","transform","position","onLoad","_c","$RefreshReg$"],"sources":["/Users/fabiankjellberg/Documents/GitHub/test/src/components/Carousel/Carousel.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\nimport './Carousel.css';\n\nfunction Carousel(props) {\n    const [currentIndex, setCurrentIndex] = useState(0);\n    const carouselRef = useRef(null); // Reference to the carousel container\n\n    // Dynamically adjust height based on the current image\n    const adjustCarouselHeight = () => {\n        const imgElement = carouselRef.current.querySelector(`img[data-index=\"${currentIndex}\"]`);\n        if (imgElement) {\n            const height = imgElement.naturalHeight; // Get the natural height of the image\n            carouselRef.current.style.height = `${height}px`; // Adjust the carousel's height\n        }\n    };\n\n    // Adjust the carousel height once the component mounts\n    // and whenever the currentIndex changes\n    useEffect(() => {\n        adjustCarouselHeight();\n        // Optionally, add a window resize listener to adjust height on window resize\n        window.addEventListener('resize', adjustCarouselHeight);\n        return () => window.removeEventListener('resize', adjustCarouselHeight);\n    }, [currentIndex]);\n\n    const goToPrevious = () => {\n        setCurrentIndex(prevIndex => prevIndex === 0 ? props.imageSrc.length - 1 : prevIndex - 1);\n    };\n\n    const goToNext = () => {\n        setCurrentIndex(prevIndex => prevIndex === props.imageSrc.length - 1 ? 0 : prevIndex + 1);\n    };\n\n    return (\n        <>\n            <div className='carousel' ref={carouselRef}>\n                <button className='previous' onClick={goToPrevious}>\n                    Previous\n                </button>\n                {props.imageSrc.map((src, index) => (\n                    <img\n                        key={index}\n                        data-index={index} // Add a data-index attribute\n                        src={src}\n                        alt={`Slide ${index}`}\n                        style={{\n                            transform: `translateX(${100 * (index - currentIndex)}%)`,\n                            position: 'absolute' // Ensure this is absolutely positioned\n                        }}\n                        onLoad={adjustCarouselHeight} // Adjust height when an image loads\n                    />\n                ))}\n                <button className='next' onClick={goToNext}>\n                    Next\n                </button>\n            </div>\n        </>\n    );\n}\n\nexport default Carousel;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}