{"ast":null,"code":"class TestEscrow {\n  static createOffer(buyer, seller, price) {\n    fetch(\"https://api.escrow-sandbox.com/2017-09-01/\", {\n      method: 'POST'\n    });\n    const axios = require('axios');\n    const apiEndpoint = 'https://api.escrow-sandbox.com/2017-09-01/transaction';\n    const email = 'your-email-address';\n    const apiKey = 'your-api-key';\n    const requestData = {\n      parties: [{\n        role: 'buyer',\n        customer: 'me'\n      }, {\n        role: 'seller',\n        customer: 'keanu.reaves@test.escrow.com'\n      }],\n      currency: 'usd',\n      description: 'The sale of johnwick.com',\n      items: [{\n        title: 'johnwick.com',\n        description: 'johnwick.com',\n        type: 'domain_name',\n        inspection_period: 259200,\n        quantity: 1,\n        schedule: [{\n          amount: 1000.0,\n          payer_customer: 'me',\n          beneficiary_customer: 'keanu.reaves@test.escrow.com'\n        }],\n        extra_attributes: {\n          image_url: 'https://i.ebayimg.com/images/g/RicAAOSwzO5e3DZs/s-l1600.jpg',\n          merchant_url: 'https://www.ebay.com'\n        }\n      }]\n    };\n    axios.post(apiEndpoint, requestData, {\n      auth: {\n        username: email,\n        password: apiKey\n      },\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      console.log('Escrow API Response:', response.data);\n    }).catch(error => {\n      console.error('Error making API request:', error.message);\n    });\n  }\n}\nexport default TestEscrow;","map":{"version":3,"names":["TestEscrow","createOffer","buyer","seller","price","fetch","method","axios","require","apiEndpoint","email","apiKey","requestData","parties","role","customer","currency","description","items","title","type","inspection_period","quantity","schedule","amount","payer_customer","beneficiary_customer","extra_attributes","image_url","merchant_url","post","auth","username","password","headers","then","response","console","log","data","catch","error","message"],"sources":["/Users/fabiankjellberg/Documents/GitHub/test/src/utilities/TestEscrow.js"],"sourcesContent":["class TestEscrow {\n    static createOffer(buyer, seller, price){\n        fetch(\"https://api.escrow-sandbox.com/2017-09-01/\",{\n        method: 'POST',\n\n        })\n\n        const axios = require('axios');\n\n        const apiEndpoint = 'https://api.escrow-sandbox.com/2017-09-01/transaction';\n        const email = 'your-email-address';\n        const apiKey = 'your-api-key';\n\n        const requestData = {\n            parties: [\n                {\n                    role: 'buyer',\n                    customer: 'me',\n                },\n                {\n                    role: 'seller',\n                    customer: 'keanu.reaves@test.escrow.com',\n                },\n            ],\n            currency: 'usd',\n            description: 'The sale of johnwick.com',\n            items: [\n                {\n                    title: 'johnwick.com',\n                    description: 'johnwick.com',\n                    type: 'domain_name',\n                    inspection_period: 259200,\n                    quantity: 1,\n                    schedule: [\n                        {\n                            amount: 1000.0,\n                            payer_customer: 'me',\n                            beneficiary_customer: 'keanu.reaves@test.escrow.com',\n                        },\n                    ],\n                    extra_attributes: {\n                        image_url: 'https://i.ebayimg.com/images/g/RicAAOSwzO5e3DZs/s-l1600.jpg',\n                        merchant_url: 'https://www.ebay.com',\n                    },\n                },\n            ],\n        };\n\n        axios.post(apiEndpoint, requestData, {\n            auth: {\n                username: email,\n                password: apiKey,\n            },\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        })\n            .then(response => {\n                console.log('Escrow API Response:', response.data);\n            })\n            .catch(error => {\n                console.error('Error making API request:', error.message);\n            });\n    }\n}export default TestEscrow"],"mappings":"AAAA,MAAMA,UAAU,CAAC;EACb,OAAOC,WAAWA,CAACC,KAAK,EAAEC,MAAM,EAAEC,KAAK,EAAC;IACpCC,KAAK,CAAC,4CAA4C,EAAC;MACnDC,MAAM,EAAE;IAER,CAAC,CAAC;IAEF,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAO,CAAC;IAE9B,MAAMC,WAAW,GAAG,uDAAuD;IAC3E,MAAMC,KAAK,GAAG,oBAAoB;IAClC,MAAMC,MAAM,GAAG,cAAc;IAE7B,MAAMC,WAAW,GAAG;MAChBC,OAAO,EAAE,CACL;QACIC,IAAI,EAAE,OAAO;QACbC,QAAQ,EAAE;MACd,CAAC,EACD;QACID,IAAI,EAAE,QAAQ;QACdC,QAAQ,EAAE;MACd,CAAC,CACJ;MACDC,QAAQ,EAAE,KAAK;MACfC,WAAW,EAAE,0BAA0B;MACvCC,KAAK,EAAE,CACH;QACIC,KAAK,EAAE,cAAc;QACrBF,WAAW,EAAE,cAAc;QAC3BG,IAAI,EAAE,aAAa;QACnBC,iBAAiB,EAAE,MAAM;QACzBC,QAAQ,EAAE,CAAC;QACXC,QAAQ,EAAE,CACN;UACIC,MAAM,EAAE,MAAM;UACdC,cAAc,EAAE,IAAI;UACpBC,oBAAoB,EAAE;QAC1B,CAAC,CACJ;QACDC,gBAAgB,EAAE;UACdC,SAAS,EAAE,6DAA6D;UACxEC,YAAY,EAAE;QAClB;MACJ,CAAC;IAET,CAAC;IAEDtB,KAAK,CAACuB,IAAI,CAACrB,WAAW,EAAEG,WAAW,EAAE;MACjCmB,IAAI,EAAE;QACFC,QAAQ,EAAEtB,KAAK;QACfuB,QAAQ,EAAEtB;MACd,CAAC;MACDuB,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC,CACGC,IAAI,CAACC,QAAQ,IAAI;MACdC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEF,QAAQ,CAACG,IAAI,CAAC;IACtD,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACZJ,OAAO,CAACI,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAACC,OAAO,CAAC;IAC7D,CAAC,CAAC;EACV;AACJ;AAAC,eAAe1C,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}