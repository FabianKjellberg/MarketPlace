{"ast":null,"code":"var _jsxFileName = \"/Users/fabiankjellberg/Documents/GitHub/MarketPlaceFrontEnd/src/utilities/CartProvider.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\n\n// Create the context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\n\n// Custom hook to use the cart context\nexport const useCart = () => {\n  _s();\n  return useContext(CartContext);\n};\n\n// Provider component\n_s(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const CartProvider = ({\n  children\n}) => {\n  _s2();\n  const [items, setItems] = useState([]);\n\n  // Function to add an item to the cart\n  const addItem = item => {\n    setItems(prevItems => [...prevItems, item]);\n  };\n\n  // Function to remove an item from the cart\n  const removeItem = itemId => {\n    setItems(prevItems => prevItems.filter(item => item.id !== itemId));\n  };\n\n  // Constant to hold the total number of items\n  const itemCount = items.length;\n\n  // Value to be passed to the context\n  const value = {\n    items,\n    addItem,\n    removeItem,\n    itemCount\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s2(CartProvider, \"6WAym07vHedVzpAy8bFDJKqtv8I=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","CartContext","useCart","_s","CartProvider","children","_s2","items","setItems","addItem","item","prevItems","removeItem","itemId","filter","id","itemCount","length","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/fabiankjellberg/Documents/GitHub/MarketPlaceFrontEnd/src/utilities/CartProvider.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\n\n// Create the context\nconst CartContext = createContext();\n\n// Custom hook to use the cart context\nexport const useCart = () => useContext(CartContext);\n\n// Provider component\nexport const CartProvider = ({ children }) => {\n  const [items, setItems] = useState([]);\n\n  // Function to add an item to the cart\n  const addItem = item => {\n    setItems(prevItems => [...prevItems, item]);\n  };\n\n  // Function to remove an item from the cart\n  const removeItem = itemId => {\n    setItems(prevItems => prevItems.filter(item => item.id !== itemId));\n  };\n\n  // Constant to hold the total number of items\n  const itemCount = items.length;\n\n  // Value to be passed to the context\n  const value = {\n    items,\n    addItem,\n    removeItem,\n    itemCount\n  };\n\n  return (\n    <CartContext.Provider value={value}>\n      {children}\n    </CartContext.Provider>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;;AAElE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;;AAEnC;AACA,OAAO,MAAMM,OAAO,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMN,UAAU,CAACI,WAAW,CAAC;AAAA;;AAEpD;AAAAE,EAAA,CAFaD,OAAO;AAGpB,OAAO,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA,MAAMW,OAAO,GAAGC,IAAI,IAAI;IACtBF,QAAQ,CAACG,SAAS,IAAI,CAAC,GAAGA,SAAS,EAAED,IAAI,CAAC,CAAC;EAC7C,CAAC;;EAED;EACA,MAAME,UAAU,GAAGC,MAAM,IAAI;IAC3BL,QAAQ,CAACG,SAAS,IAAIA,SAAS,CAACG,MAAM,CAACJ,IAAI,IAAIA,IAAI,CAACK,EAAE,KAAKF,MAAM,CAAC,CAAC;EACrE,CAAC;;EAED;EACA,MAAMG,SAAS,GAAGT,KAAK,CAACU,MAAM;;EAE9B;EACA,MAAMC,KAAK,GAAG;IACZX,KAAK;IACLE,OAAO;IACPG,UAAU;IACVI;EACF,CAAC;EAED,oBACEhB,OAAA,CAACC,WAAW,CAACkB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAb,QAAA,EAChCA;EAAQ;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACjB,GAAA,CA7BWF,YAAY;AAAAoB,EAAA,GAAZpB,YAAY;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}